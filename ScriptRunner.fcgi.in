#!/usr/local/bin/pike

Stdio.File logfile;

int main(int argc, array(string) argv)
{
  int sock;

  logfile=Stdio.File("/tmp/scriptrunner.log", "rwac");

  Stdio.File f = Stdio.stdin.dup();
  
	for (int i = 0; i < 8; i++) {
		Thread.Thread(request_loop, f->query_fd(), i);
	}
	return (-1);
}

void request_loop(int sock, int id)
{
	object request = Public.Web.FCGI.FCGI(sock);


	for (int i = 1; ; i++) {
		request->accept();
                object request_id;
                mixed e;
                e = catch(request_id = ((program)"RequestID")(request));
                if(e)
                  log("caught an error:\n\n%O\n", e->describe());

                // do we have a script file passed?
                if(request_id->misc->path_info && 
                       sizeof(request_id->misc->path_info))
                {
                   object s;
                   e = catch {
                       s = ((program)(request_id->misc->path_translated))();
                  };
                  if(e)
                  {
                     request->write("Content-type: text/html\r\n\r\n");
                     request->write("an error occurred while compiling the script:\n");
                     request->write("<pre>\n%s\n</pre>", e->describe()); 
                  }
                  else
                  {
                     mixed retval = s->parse(request_id);

                     if(!stringp(retval))
                     {
                        request->write("Content-type: text/plain\r\n\r\n");
                        request->write("%O", retval);
                     }
                     else
                     {
                        request->write("Content-type: text/html\r\n\r\n");
                        request->write(retval);
                     }

                  }
                }
                // no, then just print info.
                else
                {
  		  request->write("Content-type: text/html\r\n\r\n");
		  request->write("Hello world, this is page (%O) view #%d generated by thread %d\n", request_id->not_query, i, id);
		  request->write("<pre>\nID: %O\n</pre>", 
                    mkmapping(indices(request_id), values(request_id)));
                }


                request->finish();
                

	}
}

void log(string t, mixed ... args)
{
  if(args)
    t = sprintf(t, args);
  logfile->write(sprintf("[%s] %s", (ctime(time())- "\n"), t));
}
